<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>com.sankuai.sjst</groupId>
        <artifactId>netty4.1.25</artifactId>
        <version>1.0</version>
    </parent>

    <modelVersion>4.0.0</modelVersion>

    <artifactId>netty-server</artifactId>
    <packaging>war</packaging>
    <version>1.0</version>
    <name>${project.artifactId}</name>

    <dependencies>
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-all</artifactId>
            <version>4.0.24.Final</version>
        </dependency>
    </dependencies>

    <build>
        <finalName>${project.artifactId}-${project.version}</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <verbose>true</verbose>
                    <fork>true</fork>
                    <compilerVersion>1.8</compilerVersion>
                    <source>1.8</source>
                    <target>1.8</target>
                    <encoding>UTF-8</encoding>
                    <executable>${JAVA_HOME}/bin/javac</executable>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.1.1</version>
            </plugin>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.6</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-archetype-plugin</artifactId>
                <version>2.2</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.8.2</version>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <!--
                        在maven的initialize阶段，将Jacoco的runtime agent作为VM的一个参数
                        传给被测程序，用于监控JVM中的调用。
                        -->
                        <id>default-prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>

                        <configuration>
                            <destFile>${project.build.directory}/coverage-reports/jacoco.exec</destFile>
                            <propertyName>surefireArgLine</propertyName>
                        </configuration>

                    </execution>

                    <!--
                    在程序的verify阶段，执行report测试的程序。
                    文件的输入为perpare-agent阶段中设置或者默认的jacoco.exec.
                    参数 includes和excludes可用来选定report中过滤的类。
                    -->
                    <execution>
                        <id>default-report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>

                        <configuration>
                            <dataFile>${project.build.directory}/coverage-reports/jacoco.exec</dataFile>
                            <outputDirectory>${project.reporting.outputDirectory}/jacoco</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <resources>
            <resource>
                <directory>src/main/resources/${conf-dir}</directory>
            </resource>
            <resource>
                <directory>src/main/resources/base</directory>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>src/main/resources/${conf-dir}</directory>
            </testResource>
            <testResource>
                <directory>src/main/resources/base</directory>
            </testResource>
            <testResource>
                <directory>src/test/resources</directory>
            </testResource>
        </testResources>
    </build>

    <profiles>
        <profile>
            <id>local</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <conf-dir>local</conf-dir>
            </properties>
        </profile>
        <profile>
            <id>dev</id>
            <properties>
                <conf-dir>dev</conf-dir>
            </properties>
        </profile>
        <profile>
            <id>beta</id>
            <properties>
                <conf-dir>beta</conf-dir>
            </properties>
        </profile>
        <profile>
            <id>test</id>
            <properties>
                <conf-dir>test</conf-dir>
            </properties>
        </profile>
        <profile>
            <id>stage</id>
            <properties>
                <conf-dir>stage</conf-dir>
            </properties>
        </profile>
        <profile>
            <id>prod</id>
            <properties>
                <conf-dir>prod</conf-dir>
            </properties>
        </profile>

    </profiles>
</project>
